<?xml version="1.0"?>
<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 1997-2014  Thomas W. Judson     -->
<!-- See the file COPYING for copying conditions.  -->
<!--                                               -->
<!-- This file is automatically generated from the -->
<!-- private solution manual.  Minor contributed   -->
<!-- edits can be made against this file for       -->
<!-- the purpose of a pull request.                -->
<exercises xml:id="exercises-algcodes">
	<title>Exercícios</title>

	<exercise number="1">
		<statement>
			<p>Por que o seguinte sistema de codificação não é aceitável?</p>

			<sidebyside width="100%"> <!-- check centering -->
				<tabular halign="center" top="medium">
		        	<row bottom="medium">
		        		<cell>Informação</cell><cell>0</cell><cell>1</cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>5</cell><cell>6</cell><cell>7</cell><cell>8</cell>
		        	</row>
					<row bottom="medium">
						<cell>Palavra do Código</cell><cell>000</cell><cell>001</cell><cell>010</cell><cell>011</cell><cell>101</cell><cell>110</cell><cell>111</cell><cell>000</cell><cell>001</cell>
					</row>
			   </tabular>
			</sidebyside>
			
		</statement>
		
	</exercise>

	<exercise number="2">
		<statement>
			<p>Sem realizar nenhuma soma, explique porquê o seguinte conjunto de 4-tuplas em <m>{\mathbb Z}_2^4</m> não pode ser um código de grupo. 
				<me>(0110) \quad (1001) \quad (1010) \quad (1100)</me></p>
		</statement>
		<hint>
			<p>Não pode ser um código de grupos pois <m>(0000) \notin C</m>.</p>
		</hint>
		
	</exercise>

	<exercise number="3">
		<statement>
			<p>Calcule as distâncias de Hamming entre os seguintes pares de <m>n</m>-tuplas.
				<ol cols="2">

					<li><p><m>(011010), (011100)</m></p></li>

					<li><p><m>(11110101), (01010100)</m></p></li>

					<li><p><m>(00110), (01111)</m></p></li>

					<li><p><m>(1001), (0111)</m></p></li>

				</ol></p>
		</statement>
		<hint>
			<p>(a) 2; (c) 2.</p>
		</hint>
		
	</exercise>

	<exercise number="4">
		<statement>
			<p>Calcule os pesos das seguintes <m>n</m>-tuplas.
				<ol cols="2">

					<li><p><m>(011010)</m></p></li>

					<li><p><m>(11110101)</m></p></li>

					<li><p><m>(01111)</m></p></li>

					<li><p><m>(1011)</m></p></li>

				</ol></p>
		</statement>
		<hint>
			<p>(a) 3; (c) 4.</p>
		</hint>
		
	</exercise>

	<exercise number="5">
		<statement>
			<p>Se um código linear <m>C</m> tem peso mínimo 7, quais são as capacidades de detecção e correção de erros de <m>C</m>?</p>
		</statement>
		
	</exercise>

	<exercise number="6">
		<statement>
			<p>Para cada um dos seguintes códigos, qual é a distância mínima do código? Qual é a melhor situação que podemos esperar em relação a detecção e correção de erros? 
				<ol>
				 
					<li><p><m>(011010) \; (011100) \; (110111) \; (110000)</m></p></li>
					 
					<li><p><m>(011100) \; (011011) \; (111011) \; (100011)</m> \; <m>(000000) \; (010101) \; (110100) \; (110011)</m></p></li>
					 
					<li><p><m>(000000) \; (011100) \; (110101) \; (110001)</m></p></li>
					 
					<li><p><m>(0110110) \; (0111100) \; (1110000) \; (1111111)</m> \; <m>(1001001) \; (1000011) \; (0001111) \; (0000000)</m></p></li>
				 
				</ol></p>
		</statement>
		<hint>
			<p>(a) <m>d_{\min} = 2</m>; (c) <m>d_{\min} = 1</m>.</p>
		</hint>
		
	</exercise>

	<exercise number="7">
		<statement>
			<p>Calcule o espaço nulo de cada uma das seguintes matrizes. Que tipo de códigos de blocos <m>(n,k)</m> são os espaços nulos? Podemos encontrar uma matriz (não necessariamente uma matriz geradora padrão) que gere cada código? São únicas suas matrizes geradoras?
				<ol cols="2">

					<li><p><me>\begin{pmatrix}
					0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
					1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
					\end{pmatrix}</me></p></li>

					<li><p><me>\begin{pmatrix}
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></p></li>

					<li><p><me>\begin{pmatrix}
					1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
					0 &amp; 1 &amp; 0 &amp; 1 &amp; 1
					\end{pmatrix}</me></p></li>

					<li><p><me>\begin{pmatrix}
					0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 1
					\end{pmatrix}</me></p></li>

				</ol></p>
		</statement>
		<hint>
			<p><ol>
			 
				<li><p><m>(00000), (00101), (10011), (10110)</m>
					<me>G = 
					\begin{pmatrix}
					0 &amp; 1 \\
					0 &amp; 0 \\
					1 &amp; 0 \\
					0 &amp; 1 \\
					1 &amp; 1
					\end{pmatrix}</me></p></li>
				 
				<li><p><m>(000000), (010111), (101101), (111010)</m>
					<me>G = 
					\begin{pmatrix}
					1 &amp; 0 \\
					0 &amp; 1 \\
					1 &amp; 0 \\
					1 &amp; 1 \\ 
					0 &amp; 1 \\
					1 &amp; 1
					\end{pmatrix}</me></p></li>
			 
			</ol></p>
		</hint>
		
	</exercise>

	<exercise number="8">
		<statement>
			<p>Construa um código de blocos <m>(5,2)</m>. Discuta as capacidades de detecção e correção de erros de seu código.</p>
		</statement>
		
	</exercise>

	<exercise number="9">
		<statement>
			<p>Seja <m>C</m> o código obtido como espaço nulo da matriz
				<me>H =
				\begin{pmatrix}
				0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
				0 &amp; 0 &amp; 1 &amp; 1 &amp; 1
				\end{pmatrix}.</me>
			Decodifique a mensagem
				<me>01111 \quad 10101 \quad 01110 \quad 00011</me>
			se possível.</p>
		</statement>
		<hint>
			<p>Múltiplos erros ocorrem em uma das palavras recebidas.</p>
		</hint>
		
	</exercise>

	<exercise number="10">
		<statement>
			<p>Suponha que é transmitida uma mensagem de 1000 bits, que a probabilidade de erro em um bit é <m>p</m> e que os erros que possam ocorrer em bits diferentes são independentes entre eles. Se <m>p = 0.01</m>, qual é a probabilidade de que ocorra mais de um erro? Qual é a probilidade de que ocorram exatamente dois erros?  Repita o problema para <m>p = 0.0001</m>.</p>
		</statement>
		
	</exercise>

	<exercise number="11" xml:id="exercise-algcodes-check-matrices">
		<statement>
			<p>Que matrizes são matrizes verificadoras canônicas? Para essas matrizes, quais são as correspondentes matrizes geradoras padrão? Quais são as capacidades de detecção e correção de erros de cada uma dessas matrizes?
				<ol cols="2">

					<li><p><me>\begin{pmatrix}
					1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></p></li>

					<li><p><me>\begin{pmatrix}
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></p></li>

					<li><p><me>\begin{pmatrix}
					1 &amp; 1 &amp; 1 &amp; 0 \\
					1 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></p></li>

					<li><p><me>\begin{pmatrix}
					0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></p></li>

				</ol></p>
		</statement>
		<hint>
			<p>(a) É matriz verificadora canônica com matriz geradora padrão
					<me>G = 
					\begin{pmatrix}
					1 \\ 1 \\ 0 \\ 0 \\ 1
					\end{pmatrix}.</me></p>

			<p>(c) É matriz verificadora canônica com matriz geradora padrão
					<me>G = 
					\begin{pmatrix}
					1 &amp; 0 \\
					0 &amp; 1 \\
					1 &amp; 1 \\
					1 &amp; 0
					\end{pmatrix}.</me></p>
		</hint>
		
	</exercise>

	<exercise number="12">
		<statement>
			<p>Liste toda as possíveis síndromes para os códigos gerados por cada uma das matrizes do Exercício<nbsp/><xref ref="exercise-algcodes-check-matrices"/>.</p>
		</statement>
		<hint>
			<p>(a) Todas as possíveis síndromes ocorrem.</p>
		</hint>
		
	</exercise>

	<exercise number="13">
		<statement>
			<p>Seja
				<me>H =
				\begin{pmatrix}
				0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\
				0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1
				\end{pmatrix}.</me>
			Calcule a síndrome causada por cada um dos seguintes erros de transmissão. 
				<ol>
				 
					<li><p>Um erro no primeiro bit.</p></li>
					 
					<li><p>Um erro no terceiro bit.</p></li>
					
					<li><p>Um erro no último bit.</p></li>
					 
					<li><p>Erros no terceiro e quarto bits.</p></li>
				 
				</ol></p>
		</statement>
		
	</exercise>

	<exercise number="14">
		<statement>
			<p>Seja <m>C</m> o código de grupo em <m>{\mathbb Z}_2^3</m> definido pelas palavras <m>(000)</m> e <m>(111)</m>. Calcule as classes laterais de <m>H</m> em <m>{\mathbb Z}_2^3</m>. Por que não é necessário especificar se tratamos de classes laterais direitas ou esquerdas? Encontre o erro singular de transmissão, se existir, diga a qual classe lateral corresponda.</p>
		</statement>
		
	</exercise>

	<exercise number="15">
		<statement>
		<p>Para cada uma das seguintes matrizes, encontre as classes laterais para o código <m>C</m> correspondente. Encontre uma tabela de decodificação para cada código se for possível.
			<ol cols="2">

				<li><p><me>\begin{pmatrix}
				0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
				1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
				\end{pmatrix}</me></p></li>

				<li><p><me>\begin{pmatrix}
				0 &amp; 0 &amp; 1 &amp; 0 &amp; 0  \\
				1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\
				0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\
				1 &amp; 1 &amp; 0 &amp; 0 &amp; 1
				\end{pmatrix}</me></p></li>

				<li><p><me>\begin{pmatrix}
				1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
				0 &amp; 1 &amp; 0 &amp; 1 &amp; 1
				\end{pmatrix}</me></p></li>

				<li><p><me>\begin{pmatrix}
				1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\
				1 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
				1 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
				\end{pmatrix}</me></p></li>

			</ol></p>
		</statement>
		<hint>
			<p>(a) <m>C</m>, <m>(10000) + C</m>, <m>(01000) + C</m>, <m>(00100) + C</m>, <m>(00010) + C</m>, <m>(11000) + C</m>, <m>(01100) + C</m>, <m>(01010) + C</m>.  Não existe tabela de decodificação para <m>C</m>, pois este é somente um código detector de um erro.</p>
		</hint>
		
	</exercise>

	<exercise number="16">
		<statement>
			<p>Sejam <m>{\mathbf x}</m>, <m>{\mathbf y}</m> e <m>{\mathbf z}</m>  <m>n</m>-tuplas binárias. Demonstre cada um dos seguintes enunciados. 
				<ol>
				 
					<li><p><m>w({\mathbf x}) = d( {\mathbf x}, {\mathbf 0})</m></p></li>
					 
					<li><p><m>d( {\mathbf x}, {\mathbf y}) = d( {\mathbf x} + {\mathbf z}, {\mathbf y} + {\mathbf z} )</m></p></li>
					 
					<li><p><m>d({\mathbf x}, {\mathbf y}) = w({\mathbf x}- {\mathbf y})</m></p></li>
				 
				</ol></p>
		</statement>
		
	</exercise>

	<exercise number="17">
		<statement>
			<p>Uma <term>métrica</term> em um conjunto <m>X</m> é uma função <m>d: X \times X \rightarrow {\mathbb R}</m> que satisfaz as seguintes condição. 
				<ol>
		 
					<li><p><m>d( {\mathbf x}, {\mathbf y}) \geq 0</m> para todo <m>{\mathbf x}, {\mathbf y} \in X</m>;</p></li>
		 
					<li><p><m>d( {\mathbf x}, {\mathbf y}) = 0</m> si y solo si <m>{\mathbf x} = {\mathbf y}</m>;</p></li>
		 
					<li><p><m>d( {\mathbf x}, {\mathbf y})= d( {\mathbf y}, {\mathbf x})</m>;</p></li>
		 
					<li><p><m>d( {\mathbf x}, {\mathbf y}) \leq d( {\mathbf x}, {\mathbf z}) + d( {\mathbf z}, {\mathbf y})</m>.</p></li>
		 
				</ol>Em outras palavras, uma métrica é simplesmente uma generalização da noção de distância. Demonstre que a distância de Hamming é uma métrica em <m>{\mathbb Z}_2^n</m>. Decodificar uma mensagem na realidade corresponde a decidir qual é a palavra do código mais próxima em termos da distância de Hamming.</p>
		</statement>
		
	</exercise>

	<exercise number="18">
		<statement>
			<p>Seja <m>C</m> um código linear binário. Mostre que entre as <m>i</m>-ésimas coordenadas das palavras em <m>C</m> são todas zeros ou exatamente metade são zeros.</p>
		</statement>
		
	</exercise>

	<exercise number="19">
		<statement>
			<p>Seja <m>C</m> um código linear binário. Mostre que ou todas as palavras tem peso par ou exatamente a metade delas tem o peso par.</p>
		</statement>
		<hint>
			<p>Seja <m>{\mathbf x} \in C</m> uma palavra de peso ímpar e defina uma função e defina uma função do conjunto de todas as palavras de peso ímpar ao conjunto das palavras de peso par como <m>{\mathbf y} \mapsto {\mathbf x} + {\mathbf y}</m>. Mostre que esta função é uma bijeção.</p>
		</hint>
		
	</exercise>

	<exercise number="20">
		<statement>
			<p>Mostre que as palavras de peso par em um código linear binário <m>C</m> também formam um código linear.</p>
		</statement>
		
	</exercise>

	<exercise number="21">
		<statement>
			<p>Se temos de usar um código linear corretor de erros para transmitir os 128 caracteres <acro>ASCII</acro>, que tamanho de matriz deve ser usada? Que tamanho de matriz deve ser usada para transmitir o conjunto <acro>ASCII</acro> estendido de 256 caracteres?  E se só precisamos de detecção de erros em ambos casos?</p>
		</statement>
		
	</exercise>

	<exercise number="22">
		<statement>
			<p>Encontre a matriz verificadora canônica que da o código de verificação de paridade com três posições de informação. Qual é a matriz para sete posições de informação? Quais são as matrizes geradoras padrões correspondentes?</p>
		</statement>
		
	</exercise>

	<exercise number="23">
		<statement>
			<p>Quantas posições de verificação são necessárias para um código de correção de um erro com 20 posições de informação? Com 32 posições de informação?</p>
		</statement>
		<hint>
			<p>Para 20 posições de informação, são necessárias ao menos 6 bits para assegurar um código de correção de um erro.</p>
		</hint>
		
	</exercise>

	<exercise number="24">
		<statement>
			<p>Seja <m>{\mathbf e}_i</m> a <m>n</m>-tupla binária com um 1 na <m>i</m>-ésima coordenada e <m>0</m> nas demais e suponha que <m>H \in {\mathbb M}_{m \times n}({\mathbb Z}_2)</m>. Mostre que <m>H{\mathbf e}_i</m> é a <m>i</m>-ésima coluna da matriz <m>H</m>. </p>
		</statement>
		
	</exercise>

	<exercise number="25" xml:id="exercise-algcodes-dual-code">
		<statement>
			<p>Seja <m>C</m> um código linear <m>(n,k)</m>. Vamos definir o <term>código dual</term> ou <term>código ortogonal</term> de <m>C</m> como 
				<me>C^\perp = \{ {\mathbf x} \in {\mathbb Z}_2^n :  {\mathbf x} \cdot {\mathbf y} = 0 \text{ para todo } {\mathbf y} \in C \}.</me>
				<ol>
 
					<li><p>Encontre o código dual do código linear <m>C</m> donde <m>C</m> está dado pela matriz 
						<me>\begin{pmatrix}
						1 &amp; 1 &amp; 1 &amp; 0 &amp; 0 \\
						0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
						1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
						\end{pmatrix}.</me></p></li>
 
					<li><p>Mostre que <m>C^\perp</m> é um código linear <m>(n, n-k)</m>.</p></li>
 
					<li><p>Encontre as matrizes verificadora canônica e geradora padrão de <m>C</m> e <m>C^\perp</m>. O que acontece no geral? Demonstre sua conjectura.</p></li>
 
				</ol></p>
		</statement>
		
	</exercise>

	<exercise number="26">
		<statement>
			<p>Seja <m>H</m> uma matriz de <m>m \times n</m> sobre <m>{\mathbb Z}_2</m>, donde a <m>i</m>-ésima coluna é o número <m>i</m> escrito em binário com <m>m</m> bits. O espaço nulo de tal matriz se chama <term>código de Hamming</term>. 
				<ol>
 
					<li><p>Mostre que a matriz
						<me>H =
						\begin{pmatrix}
						0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 1 \\
						0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 \\
						1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0
						\end{pmatrix}</me>
				gera um código de Hamming. Quais são as propriedades de correção de erros de um código de Hamming?</p></li>
 
					<li><p>A coluna correspondente a síndrome também marca o bit donde ocorreu o erro; isto é, a <m>i</m>-ésima coluna da matriz é <m>i</m> escrito como número binário, e a síndrome imediatamente nos diz qual é o bit incorreto. Se a palavra recebida é <m>(101011)</m>, calcule a síndrome. Em que bit ocorreu o erro neste caso, e qual era a palavra originalmente transmitida?</p></li>
 
					<li><p>Entregue um matriz binária <m>H</m> para o código de Hamming com seis posições de informação e quatro de verificação. Quais são as posições de verificação e quais são as de informação? Codifique as mensagens <m>(101101)</m> e <m>(001001)</m>. Decodifique as palavras recebidas <m>(0010000101)</m> e <m>(0000101100)</m>.  Quais são as possíveis síndromes para este código?</p></li>
 
					<li><p>Qual é o número de bits de verificação e o número de bits de informação em um código de Hamming de blocos <m>(m,n)</m>? Encontre tanto uma cota superior como uma cota inferior para o número de bits de informação em termos do número de bits de verificação. Códigos de Hamming que tem o máximo número de bits possível de informação com <m>k</m> bits de verificação se chamam <term>perfeitos</term>. Cada possível síndrome com exceção de <m>{\mathbf 0}</m> ocorre como uma coluna. Se o número de bits de informação é menor que o máximo, então o código se chama <term>encurtado</term>. Neste caso, dê um exemplo donde algumas síndromes possam representar múltiplos erros.</p></li>
 
				</ol></p>
		</statement>
		
	</exercise>

</exercises>
