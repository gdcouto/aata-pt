<?xml version="1.0" encoding="UTF-8" ?>

<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 1997-2017  Thomas W. Judson     -->
<!-- See the file COPYING for copying conditions.  -->


<chapter xml:id="integers" xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>Os Inteiros</title>

	<introduction>
	<p>O conjunto dos números inteiros é um componente básico da matemática. Neste capítulo investigaremos as propriedades fundamentais dos inteiros, incluindo o princípio de indução matemática, o algoritmo de divisão, e o Teorema Fundamental da Aritmética.</p>
		</introduction>

		<section xml:id="section-math-induction">
			<title>Princípio de Indução</title>

			<p>Suponhamos que queremos demonstrar que
				<me>1 + 2 + \cdots + n = \frac{n(n + 1)}{2}</me>
			para qualquer número natural  <m>n</m>. Esta fórmula se pode verificar facilmente para números pequenos tais como <m>n = 1</m>, 2, 3, ou 4, mas é impossível de verificar para todos os números naturais um por um.  Para demonstrar que a fórmula é verdadeira em geral, é necessário um método mais genérico.</p>

			<p>Suponhamos que temos verificado a equação para os primeiros <m>n</m> casos.  Intentaremos demonstrar que podemos gerar uma fórmula para o caso <m>(n + 1)</m> a partir deste conhecimento.  A fórmula é verdadeira para <m>n = 1</m> pois 
				<me>1 = \frac{1(1 + 1)}{2}.</me>
			Se temos verificado os primeiros <m>n</m> casos, então
				<md>
					<mrow>1 + 2 + \cdots + n + (n + 1) &amp; = \frac{n(n + 1)}{2} + n + 1</mrow>
					<mrow>&amp; = \frac{n^2 + 3n + 2}{2}</mrow>
					<mrow>&amp; = \frac{(n + 1)[(n + 1) + 1]}{2}.</mrow>
				</md>
			Isso corresponde exatamente à fórmula para o caso <m>(n + 1)</m>.</p>
			 
			<p>Este método de demonstração se conhece como <term>indução matemática</term> ou simplesmente <term>indução</term> se não há risco de confusão.  Em vez de tentar verificar uma proposição sobre um subconjunto <m>S</m> dos inteiros positivos <m>{\mathbb N}</m> um por um, uma tarefa impossível se <m>S</m> é um conjunto infinito, entregamos uma demonstração direita para o primeiro inteiro considerado, seguida de um argumento genérico mostrando que se a proposição se cumpre num certo caso, então também se cumpre para o seguinte caso na sucessão.  Resumimos a indução matemática no seguinte axioma. </p>

			<principle xml:id="principle-integers-first-pmi">
				<title>Primeiro Princípio de Indução</title>
				<idx><h>Indução</h><h>primeiro princípio de</h></idx>
				<statement>
					<p>Seja <m>S(n)</m> uma proposição sobre números inteiros para <m>n \in {\mathbb N}</m> e suponhamos que <m>S(n_0)</m> é verdadeira para algum inteiro <m>n_0</m>.  Se para todos os inteiros <m>k</m> com <m>k \geq n_0</m>, <m>S(k)</m> implica <m>S(k+1)</m>, é verdadeira, então <m>S(n)</m> é verdadeira para todos os inteiros <m>n</m> maiores ou iguais a <m>n_0</m>.</p>
				</statement>
			</principle>		
					
	<!-- wording change.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->

			<example xml:id="example-integers-induction-greater-than">
				<p>Para todos os inteiros <m>n \geq 3</m>, <m>2^n \gt n + 4</m>. Como
					<me>8 = 2^3 \gt 3 + 4 = 7,</me>
				a afirmação é verdadeira para <m>n_0 = 3</m>.  Suponhamos que <m>2^k \gt k + 4</m> para <m>k \geq 3</m>.  Então <m>2^{k + 1} = 2 \cdot 2^{k} \gt 2(k + 4)</m>.  Mas
					<me>2(k + 4) = 2k + 8 \gt k + 5 = (k + 1) + 4</me>
				pois <m>k</m> é positivo.  Logo, por indução, a afirmação se cumpre para todos os inteiros <m>n \geq 3</m>.</p>
			</example>


			<example xml:id="example-integers-induction-divisible">
				<p>O inteiro <m>10^{n + 1} + 3 \cdot 10^n + 5</m> é divisível por 9 para todo <m>n \in {\mathbb N}</m>.  Para <m>n = 1</m>, 
					<me>10^{1 + 1} + 3 \cdot 10 + 5 = 135 = 9 \cdot 15</me>
				é divisível por 9.  Suponhamos que <m>10^{k + 1} + 3 \cdot 10^k + 5</m> é divisível por 9 para <m>k \geq 1</m>.  Então 
					<md>
						<mrow>10^{(k + 1) + 1} + 3 \cdot 10^{k + 1} + 5&amp; = 10^{k + 2} + 3 \cdot 10^{k + 1} + 50 - 45</mrow>
						<mrow>&amp; = 10 (10^{k + 1} + 3 \cdot 10^{k} + 5) - 45</mrow>
					</md>
				é divisível por 9.</p>
			</example>

			<example xml:id="example-integers-binomial-theorem">
				<p>Demonstraremos o teorema do binômio por indução; ou seja, 
					<me>(a + b)^n = \sum_{k = 0}^{n} \binom{n}{k} a^k b^{n - k},</me>
				onde <m>a</m> e <m>b</m> são números reais, <m>n \in \mathbb{N}</m>, e
					<me>\binom{n}{k} = \frac{n!}{k! (n - k)!}</me>
				é o coeficiente binomial.  <notation><usage>n!</usage><description><m>n</m> fatorial</description></notation><notation><usage>\binom{n}{k}</usage><description>coeficiente binomial <m>n!/(k!(n-k)!)</m></description></notation> Primeiro mostraremos que
					<me>\binom{n + 1}{k} = \binom{n}{k} + \binom{n}{k - 1}.</me>
				Este resultado é a consequência de 
					<md>
						<mrow>\binom{n}{k} + \binom{n}{k - 1} &amp; = \frac{n!}{k!(n - k)!} +\frac{n!}{(k-1)!(n - k + 1)!}</mrow>
						<mrow>&amp; = \frac{(n + 1)!}{k!(n + 1 - k)!}</mrow>
						<mrow>&amp; =\binom{n + 1}{k}.</mrow>
					</md>
				Se <m>n = 1</m>, o teorema do binômio é fácil de verificar. Agora suponhamos que o resultado é verdadeiro para  <m>n</m> maior ou igual a 1.  Então
					<md>
						<mrow>(a + b)^{n + 1} &amp; = (a + b)(a + b)^n</mrow>
						<mrow>&amp; = (a + b) \left( \sum_{k = 0}^{n} \binom{n}{k} a^k b^{n - k}\right)</mrow>
						<mrow>&amp; = \sum_{k = 0}^{n} \binom{n}{k} a^{k + 1} b^{n - k} + \sum_{k = 0}^{n} \binom{n}{k} a^k b^{n + 1 - k}</mrow>
						<mrow>&amp; = a^{n + 1} + \sum_{k = 1}^{n} \binom{n}{k - 1} a^{k} b^{n + 1 - k} + \sum_{k = 1}^{n} \binom{n}{k}  a^k b^{n + 1 - k} + b^{n + 1}</mrow>
						<mrow>&amp;  = a^{n + 1} + \sum_{k = 1}^{n} \left[ \binom{n}{k - 1} + \binom{n}{k} \right]a^k b^{n + 1 - k} + b^{n + 1}</mrow>
						<mrow>&amp;  = \sum_{k = 0}^{n + 1}   \binom{n + 1}{k} a^k b^{n + 1- k}.</mrow>
					</md></p>
			</example>
	 
			<p>Temos uma proposição equivalente ao Primeiro Princípio de Indução que as vezes será necessária.</p>
	 

			<principle xml:id="principle-integers-second-pmi">
				<title>Segundo Princípio de Indução</title>
				<idx><h>Indução</h><h>segundo princípio de</h></idx>
				<statement>
					<p>Seja <m>S(n)</m> uma afirmação sobre inteiros para <m>n \in {\mathbb N}</m> e suponhamos que <m>S(n_0)</m> é verdadeira para algum inteiro  <m>n_0</m>.  Se <m>S(n_0), S(n_0 + 1), \ldots, S(k)</m> implicam <m>S(k + 1)</m> para <m>k \geq n_0</m>, então <m>S(n)</m> é verdadeira para todos os inteiros <m>n \geq n_0</m>. </p>
				</statement>
			</principle>		

	<!-- wording change.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->
	 
			<p>Um subconjunto <m>S</m> de <m>{\mathbb Z}</m> está <term>bem-ordenado</term><idx><h>Conjunto bem-ordenado</h></idx> se todo subconjunto não vazio de <m>S</m> contém um menor elemento.  Note que o conjunto <m>{\mathbb Z}</m> não está bem-ordenado pois não contém um elemento mínimo.  Os números naturais no entanto, sim estão bem-ordenados.</p> 
	 
			<principle>
				<title>Princípio da Bem-Ordem</title>
				<statement>
					<p>O conjunto dos números naturais está bem-ordenado.</p>
				</statement>
			</principle>		
	 
			<p>O Princípio da Bem-Ordem é equivalente ao Princípio de Indução.</p> 
	 

			<lemma xml:id="lemma-integers-smallest-number">
				<statement>
					<p>O princípio de Indução implica que <m>1</m> é o menor número natural positivo.</p>
				</statement>
				<proof>
					<p>Seja <m>S = \{ n \in {\mathbb N} : n \geq 1 \}</m>. Então <m>1 \in S</m>. Suponhamos que <m>n \in S</m>. Como <m>0 \lt 1</m>, temos <m>n = n + 0 \lt n + 1</m>.  Portanto, <m>1 \leq n \lt n + 1</m>.  Assim, se <m>n \in S</m>, então <m>n + 1</m> também deve estar em <m>S</m>, e pelo Princípio de Indução,  <m>S = \mathbb N</m>.</p>
				</proof>
			</lemma>

	<!--  Theorem reworded for clarity.  TWJ 12/17/2011 -->
	<!--  Suggested by K. Halasz and R. Beezer. -->

			<theorem xml:id="theorem-integers-pmi-implies-pwo">
				<statement>
					<p>O Princípio de Indução implica o Princípio da Bem-Ordem.  Ou seja, todo subconjunto não vazio de <m>\mathbb N</m> contém um menor elemento.</p>
				</statement>
				<proof>
					<p>Devemos mostrar que se <m>S</m> é um subconjunto não vazio dos números naturais, então <m>S</m> contém um elemento mínimo.  Se <m>S</m> contém a  1, o teorema é verdadeiro pelo Lema<nbsp /><xref ref="lemma-integers-smallest-number" />. Suponhamos que se <m>S</m> contém um inteiro <m>k</m> tal que <m>1 \leq k \leq n</m>, então <m>S</m> contém um elemento mínimo. Mostraremos que se um conjunto <m>S</m> contém um inteiro menor ou igual a <m>n + 1</m>, então <m>S</m> tem um elemento mínimo.  Se <m>S</m> não contém um elemento menor a <m>n+1</m>, então <m>n+1</m> é o menor inteiro em  <m>S</m>.  Do contrário, <m>S</m> deve conter um inteiro menor ou igual a <m>n</m>. Nesse caso, pela hipótese de indução, <m>S</m> contém um elemento mínimo.</p>
				</proof>
			</theorem>

	<!-- wording change.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->
	 
			<p>A Indução pode ser muito útil na formulação de definições. Por exemplo, há duas formas de definir <m>n!</m>, o fatorial de um inteiro positivo <m>n</m>. 
				<ul>
	 
					<li><p>A definição <em>explícita</em>: <m>n! = 1 \cdot 2 \cdot 3 \cdots (n - 1) \cdot n</m>.</p></li>  
	 
					<li><p>A definição <em>indutiva</em> ou <em>recursiva</em>: <m>1! = 1</m> e <m>n! = n(n - 1)!</m> para <m>n \gt 1</m>.</p></li> 
	 
			</ul>Olhar um problema de forma recursiva, em vez de explícita, frequentemente resulta numa melhor compreensão de situações complexas.</p>

		</section>

		<section xml:id="section-division-algorithm">
			<title>O Algoritmo de Divisão</title>

			<introduction>

				<p>Uma aplicação do Princípio da Bem-Ordem que usaremos frequentemente é o algoritmo de divisão.</p> 

				<theorem xml:id="theorem-integers-division_algorithm">
					<title>Algoritmo de Divisão</title>
					<idx><h>Algoritmo de divisão</h><h>para inteiros</h></idx>
					<statement>
						<p>Sejam <m>a</m> e <m>b</m> números inteiros, com <m>b \gt 0</m>.  Então existem inteiros únicos <m>q</m> e <m>r</m> tais que 
							<me>a = bq + r</me>
						onde <m>0 \leq r \lt b</m>.</p>
					</statement>
					<proof>
						<p>Este é um exemplo perfeito de uma demonstração de existência e unicidade.  Devemos primeiro demonstrar que os números <m>q</m> e <m>r</m> realmente existem. Depois devemos mostrar que se  <m>q'</m> e <m>r'</m> também são tais números, então <m>q = q'</m> e <m>r = r'</m>.</p>
		 
						<p><em>Existência de <m>q</m> e <m>r</m>.</em> Seja
							<me>S = \{ a - bk : k \in {\mathbb Z} \text{ e } a - bk \geq 0 \}.</me>
						Se <m>0 \in S</m>, então <m>b</m> divide a <m>a</m>, e podemos tomar <m>q = a/b</m> e <m>r = 0</m>.  Se <m>0 \notin S</m>, podemos usar o Princípio da Bem-Ordem.  Devemos primeiro mostrar que <m>S</m> é não vazio.  Se <m>a \gt 0</m>, então <m>a - b \cdot 0 \in S</m>. Se <m>a \lt 0</m>, então <m>a - b(2a) = a(1 - 2b) \in S</m>.  Em qualquer caso <m>S \neq \emptyset</m>.  Pelo Princípio da Bem-Ordem, <m>S</m> tem um elemento mínimo, digamos <m>r = a - bq</m>. Portanto, <m>a = bq + r</m>, <m>r \geq 0</m>. Mostremos agora que <m>r \lt b</m>. Suponhamos que <m>r \gt b</m>. Então   
							<me>a - b(q + 1)= a - bq - b = r - b \gt 0.</me>
						Neste caso teríamos <m>a - b(q + 1)</m> no conjunto <m>S</m>. Mas então <m>a - b(q + 1) \lt a - bq</m>, o que nos levaria a uma contradição do fato que  <m>r = a - bq</m> é o menor elemento de <m>S</m>. Assim <m>r \leq b</m>.  Como <m>0 \notin S</m>, <m>r \neq b</m> e assim <m>r \lt b</m>.</p>
		 
						<p><em>Unicidade de <m>q</m> e <m>r</m>.</em> Suponhamos que existem inteiros <m>r</m>, <m>r'</m>, <m>q</m>, e <m>q'</m> tais que
							<me>a = bq + r, 0 \leq r \lt b \quad \text{e}\quad a = bq' + r', 0 \leq r' \lt b.</me>
						Então <m> bq + r =  bq' + r'</m>.  Suponhamos que <m>r' \geq r</m>.  Da última equação temos <m>b(q - q') = r' - r</m>; portanto, <m>b</m> deve dividir a <m>r' - r</m> e <m>0 \leq r'- r \leq r' \lt b</m>.  Isso é possível só se <m>r' - r = 0</m>.  Logo, <m>r = r'</m> e  <m>q = q'</m>.</p>
					</proof>
				</theorem>

					<p>Sejam <m>a</m> e <m>b</m> inteiros.  Se <m>b = ak</m> para algum inteiro <m>k</m>, escreveremos <m>a \mid b</m>.  Um inteiro <m>d</m> se chama <term>divisor comum</term> de <m>a</m> e <m>b</m> se <m>d \mid a</m> e <m>d \mid b</m>.  O <term>máximo divisor comum</term><idx><h>Máximo divisor comum</h><h>de dois inteiros</h></idx> dos inteiros <m>a</m> e <m>b</m> é um inteiro positivo <m>d</m> tal que <m>d</m> é um divisor comum de <m>a</m> e <m>b</m> e se <m>d'</m> é qualquer outro divisor comum de <m>a</m> e <m>b</m>, então <m>d' \mid d</m>. <notation><usage>a \mid b</usage><description><m>a</m> divide a <m>b</m></description></notation><notation><usage>\gcd(a, b)</usage><description>máximo divisor comum de <m>a</m> e <m>b</m></description></notation>  Escreveremos <m>d = \gcd(a, b)</m>; por exemplo, <m>\gcd( 24, 36) = 12</m> e <m>\gcd(120, 102) = 6</m>.  Dizemos que dois inteiros <m>a</m> e <m>b</m> são <term>relativamente primos </term> se <m>\gcd( a, b ) = 1</m>.</p>

				

				<theorem xml:id="theorem-integers-gcd">
					<statement>
						<p>Sejam <m>a</m> e <m>b</m> inteiros distintos de zero. Então existem inteiros <m>r</m> e <m>s</m> tais que
							<me>\gcd( a, b) = ar + bs.</me>
						Alem disso, o máximo divisor comum de <m>a</m> e <m>b</m> é único.</p>
					</statement>
					<proof>
						<p>Seja
							<me>S = \{ am + bn : m, n \in {\mathbb Z} \text{ e } am + bn \gt 0 \}.</me>
						Claramente, o conjunto <m>S</m> não é vazio; logo, pelo Princípio da Bem-Ordem <m>S</m> tem um elemento mínimo, digamos <m>d = ar + bs</m>.  Afirmamos que <m>d = \gcd( a, b)</m>.  Escreve <m>a = dq + r'</m> com  <m>0 \leq r' \lt d</m>. Se <m>r' \gt 0</m>, então <!-- r changed to r' - TWJ 1/31/2011 -->
							<md>
								<mrow>r'&amp; = a - dq</mrow>
								<mrow>&amp; = a - (ar + bs)q</mrow>
								<mrow>&amp; = a - arq - bsq</mrow>
								<mrow>&amp; = a( 1 - rq ) + b( -sq ),</mrow>
							</md>
						que está em <m>S</m>.  Mas isso estaria em contradição com o fato de que <m>d</m> é o menor  membro de <m>S</m>.  Logo, <m>r' = 0</m> e <m>d</m> divide a <m>a</m>.  Um argumento similar mostra que <m>d</m> divide a <m>b</m>.  Portanto, <m>d</m> é um divisor comum de <m>a</m> e <m>b</m>.</p>

						<p>Suponhamos que <m>d'</m> é outro divisor comum de <m>a</m> e <m>b</m>, e queremos mostrar que <m>d' \mid d</m>. Se <m>a = d'h</m> e <m>b = d'k</m>, então
							<me>d = ar + bs = d'hr + d'ks = d'(hr + ks).</me>
						Ou seja <m>d'</m> divide a <m>d</m>. Logo, <m>d</m> é o único máximo divisor comum de <m>a</m> e <m>b</m>.</p>
					</proof>
					<!-- Notation error in proof fixed (pointed out by Rocco Rossi) - TWJ 9/13/2010 -->
				</theorem>

				<corollary xml:id="corollary-integers-coprime">
					<statement>
						<p>Sejam <m>a</m> e <m>b</m> inteiros relativamente primos. Então existem inteiros <m>r</m> e <m>s</m> tais que <m>ar + bs = 1</m>.</p>
					</statement>
				</corollary>

			</introduction>

			<subsection xml:id="integers-subsection-euclidean-algorithm">
				<title>O Algoritmo de Euclides</title>

				<p>Entre outras coisas, o Teorema<nbsp /><xref ref="theorem-integers-gcd" /> nos permite calcular o máximo divisor comum de dois inteiros.</p>


				<example xml:id="example-integers-gcd">
					<p>Calculemos o máximo divisor comum de <m>945</m> e <m>2415</m>.  Primeiro observemos que
						<md>
							<mrow>2415 &amp; = 945 \cdot 2 + 525</mrow>
							<mrow>945 &amp; = 525 \cdot 1 + 420</mrow>
							<mrow>525 &amp; = 420 \cdot 1 + 105</mrow>
							<mrow>420 &amp; = 105 \cdot 4 + 0.</mrow>
						</md>
					Usando os passos de trás para frente, 105 divide a 420, 105 divide a 525, 105 divide a 945, e 105 divide a 2415.  Logo, 105 divide tanto a 945 como a 2415.  Se <m>d</m> foi outro divisor comum de 945 e 2415, então <m>d</m> também dividiria a 105.  Portanto, <m>\gcd( 945, 2415 ) = 105</m>.</p>

					<p>Recorrendo as equações anteriores de baixo para cima, podemos obter números inteiros <m>r</m> e <m>s</m> tais que <m>945 r + 2415 s = 105</m>.  Note que  
						<md>
							<mrow>105 &amp; = 525 + (-1) \cdot 420</mrow>
							<mrow>&amp; = 525 + (-1) \cdot [945 + (-1) \cdot 525]</mrow>
							<mrow>&amp; = 2 \cdot 525 + (-1) \cdot 945</mrow>
							<mrow>&amp; = 2 \cdot [2415 + (-2) \cdot 945] + (-1) \cdot 945</mrow>
							<mrow>&amp; = 2 \cdot 2415 + (-5) \cdot 945.</mrow>
						</md>
					Assim <m>r = -5</m> e <m>s= 2</m>.  Note que <m>r</m> e <m>s</m> não são únicos, pois por exemplo <m>r = 41</m> e <m>s = -16</m> também funcionariam.</p>
				</example>

				<p>Para calcular <m>\gcd(a,b) = d</m>, estamos usando sucessivas divisões para obter uma sucessão decrescente de inteiros positivos <m>r_1 \gt r_2 \gt \cdots \gt r_n = d</m>; ou seja,
					<md><mrow>b &amp; = a q_1 + r_1</mrow>
						<mrow>a &amp; = r_1 q_2 + r_2</mrow>
						<mrow>r_1 &amp; = r_2 q_3 + r_3</mrow>
						<mrow>&amp; \vdots </mrow>
						<mrow>r_{n - 2} &amp; = r_{n - 1} q_{n} + r_{n}</mrow>
						<mrow>r_{n - 1} &amp; = r_n q_{n + 1}.</mrow>
					</md>
				Para encontrar <m>r</m> e <m>s</m> tais que <m>ar + bs = d</m>, começamos com a última equação e substituímos os resultados obtidos das equações anteriores:
					<md>
						<mrow>d &amp; = r_n</mrow>
						<mrow>&amp; = r_{n - 2} - r_{n - 1} q_n</mrow>
						<mrow>&amp; = r_{n - 2} - q_n( r_{n - 3} - q_{n - 1} r_{n - 2} )</mrow>
						<mrow>&amp; = -q_n r_{n - 3} + ( 1+ q_n q_{n-1} ) r_{n - 2} </mrow>
						<mrow>&amp; \vdots </mrow>
						<mrow>&amp; = ra + sb.</mrow>
					</md>
				O algoritmo que acabamos de usar para encontrar o máximo divisor comum <m>d</m> de dois inteiros <m>a</m> e <m>b</m> e escrever <m>d</m> como combinação linear de <m>a</m> e <m>b</m> se conhece como o <term>algoritmo de Euclides</term><idx><h>algoritmo de Euclides</h></idx><idx><h>Algoritmo</h><h>de Euclides</h></idx>.</p> 

			</subsection>

			<subsection  xml:id="integers-subsection-prime-numbers">
				<title>Números Primos</title>

				<p>Seja <m>p</m> um inteiro tal que <m>p \gt 1</m>.  Dizemos que <m>p</m> é um <term>número primo</term><idx><h>Inteiro primo</h></idx>, ou simplesmente <m>p</m> é <term>primo</term>, se e só se os únicos números inteiros positivos que dividem a <m>p</m> são 1 e o mesmo <m>p</m>.  Um inteiro <m>n \gt 1</m> que não é primo se chama <term>composto</term><idx><h>Inteiro composto</h></idx>.</p>

				<lemma xml:id="theorem-integers-prime-divisor">
					<title>Euclides</title>
					
					<statement>
						<p>Sejam <m>a</m> e <m>b</m> inteiros e <m>p</m> um número primo.  Se <m>p \mid ab</m>, então já seja <m>p \mid a</m> ou <m>p \mid b</m>.</p>
					</statement>
					<proof>
						<p>Suponhamos que <m>p</m> não divide a <m>a</m>.  Devemos mostrar que <m>p \mid b</m>. Como <m>\gcd( a, p ) = 1</m>, existem inteiros <m>r</m> e <m>s</m> tais que <m>ar + ps = 1</m>.  Assim
							<me>b = b(ar + ps) = (ab)r + p(bs).</me>
						Como <m>p</m> divide tanto <m>ab</m> como si mesmo, <m>p</m> divide <m>b = (ab)r + p(bs)</m>.</p>
					</proof>
				</lemma>

				<theorem xml:id="theorem-integers-infinite-primes">
					<title>Euclides</title>
					<statement>
						<p>Existe uma quantidade infinita de números primos.</p>
					</statement>
					<proof>
						<p>Demonstraremos este teorema por contradição.  Suponhamos que existe só uma quantidade finita de primos, digamos <m>p_1, p_2, \ldots, p_n</m>.  Seja <m>P = p_1  p_2  \cdots  p_n + 1</m>.    Então <m>P</m> deve ser divisível por algum <m>p_i</m> com <m>1 \leq i \leq n</m>. Neste caso, <m>p_i</m> deve dividir <m>P - p_1 p_2 \cdots p_n = 1</m>, o que é uma contradição.  Logo, já seja  <m>P</m> é primo ou existe um primo adicional <m>p \neq p_i</m> que divide <m>P</m>.</p>
					</proof>
				</theorem>

	<!-- Error in proof fixed.  Suggested by R. Rossi.  TWJ 12/19/2011 -->

				<theorem xml:id="theorem-fund-theorem-arithmetic">
					<title>Teorema Fundamental da Aritmética</title>
					<idx><h>Teorema Fundamental</h><h>da Aritmética</h></idx>
					<statement>
						<p>Seja <m>n</m> um inteiro tal que <m>n \gt 1</m>. Então
							<me>n = p_1 p_2 \cdots p_k,</me>
						com <m>p_1, \ldots, p_k</m> primos (não necessariamente distintos).  Alem disso, esta fatoração é única; ou seja, se 
							<me>n = q_1 q_2 \cdots q_l,</me>
						então <m>k = l</m> e os <m>q_i</m> são iguais aos <m>p_i</m> possivelmente noutra ordem.</p>
					</statement>
					<proof>
						<p><em>Unicidade.</em>  Para demonstrar a unicidade procederemos por indução em <m>n</m>. O teorema é claramente verdadeiro para <m>n = 2</m> pois neste caso <m>n</m> é primo.  Agora suponhamos que o resultado se cumpre para todos os inteiros <m>m</m> tais que <m>1 \leq m \lt n</m>, e 
							<me>n = p_1 p_2 \cdots p_k = q_1 q_2 \cdots q_l,</me>
						com <m>p_1 \leq p_2 \leq \cdots \leq p_k</m> e <m>q_1 \leq q_2 \leq \cdots \leq q_l</m>. Pelo Lema<nbsp /><xref ref="theorem-integers-prime-divisor" />, <m>p_1  \mid  q_i</m> para certos <m>i = 1, \ldots, l</m> e <m>q_1  \mid  p_j</m> para certos <m>j = 1, \ldots, k</m>.  Como todos os <m>p_i</m> e os <m>q_i</m> são primos, <m>p_1 = q_i</m> e  <m>q_1 = p_j</m>. Logo, <m>p_1 = q_1</m> pois <m>p_1 \leq p_j = q_1 \leq q_i = p_1</m>.  Por a hipótese de indução, 
							<me>n' = p_2 \cdots p_k = q_2 \cdots q_l</me>
						tem uma fatoração única.  Logo, <m>k = l</m> e <m>q_i = p_i</m> para <m>i = 1, \ldots, k</m>.</p>

						<p><em>Existência.</em> Para demonstrar a existência, suponhamos que existe algum inteiro que não pode ser escrito como produto de primos.  Seja <m>S</m> o conjunto de tais números.  Pelo Princípio da Bem-Ordem, <m>S</m> contém um elemento mínimo, digamos <m>a</m>.  Se os únicos fatores positivos de <m>a</m> são <m>a</m> e 1, então <m>a</m> é primo, o que é uma contradição.  Logo, <m>a = a_1 a_2</m> com <m>1 \lt a_1 \lt a</m> e <m>1 \lt a_2 \lt a</m>.  Nem <m>a_1\in S</m> nem <m>a_2 \in S</m>, pois <m>a</m> é o menor elemento de <m>S</m>.  Assim 
							<md>
								<mrow>a_1 &amp; = p_1 \cdots p_r</mrow>
								<mrow>a_2 &amp; = q_1 \cdots q_s.</mrow>
							</md>
						Portanto,
							<me>a = a_1 a_2 = p_1 \cdots p_r q_1 \cdots q_s.</me>
						Assim <m>a \notin S</m>, o que é uma contradição.</p>
					</proof>
				</theorem>

			</subsection>

			<subsection  xml:id="integers-subsection-historical-note">
				<title>Nota Histórica</title>
				
				<p>Os números primos já foram estudados pelos antigos Gregos.  Dos resultados importantes da Antiguidade são a demonstração de Euclides de que existe uma infinidade de primos e a crivo de Eratóstenes, um método para calcular todos os números primos menores do que um inteiro positivo dado.  Um problema em teoria de números é encontrar uma função <m>f</m> tal que <m>f(n)</m> é primo para cada inteiro <m>n</m>. Pierre Fermat (1601?<ndash />1665) conjeturou que <m>2^{2^n} + 1</m> era primo para todo <m>n</m>, mas posteriormente Leonhard Euler (1707<ndash />1783) demonstrou que
					<me>2^{2^5} + 1 = \text{4,294,967,297}</me>
				é um número composto. Uma das muitas conjeturas não demonstradas sobre números primos é a conjetura de Goldbach.  Numa carta ao Euler em 1742, Christian Goldbach enunciou a conjetura que todo inteiro positivo com a exceção de 2 parecia ser uma soma de dois primos:  <m>4 = 2 + 2</m>, <m>6 = 3 + 3</m>, <m>8 =3 + 5</m>, <m>\ldots</m>.  Enquanto a conjetura foi verificada para todos os números até <m>4 \times 10^{18}</m>, ainda não foi demonstrada em geral.  Como os números primos têm um papel importante na criptografia de chave pública, há atualmente grande interesse em determinar se um número grande é primo ou não.</p>

				<xi:include href="./sage/integers-info.xml" />

			</subsection>

			<!--Updated the numbers for which Goldbach's conjcture has been verified.  TWJ 4/7/2014-->

		</section>

	<xi:include href="./exercises/integers.xml" />

		<exercises xml:id="integers-exercises-programming">
			<title>Exercícios de Programação</title>
	 
			<exercise>
				<title>A Crivo de Eratóstenes</title>
				<idx><h>Crivo de Eratóstenes</h></idx>  
				<statement>
					<p>Um método para calcular todos os números primos menores do que um certo inteiro positivo dado <m>N</m> é listar todos os números <m>n</m> tais que <m>1 \lt n \lt N</m>.  Comece eliminando todos os múltiplos de 2.  Depois elimine todos os múltiplos de 3. Agora elimine todos os múltiplos de 5.  Note que 4 já foi eliminado.  Continue desta maneira, notando que não é necessário chegar até <m>N</m>; é suficiente parar no <m>\sqrt{N}</m>. Usando este método, calcule todos os números primos menores do que <m>N = 250</m>.  Também podemos usar este método para encontrar todos os inteiros que são relativamente primos a um inteiro <m>N</m>.  Simplesmente elimine os fatores primos de <m>N</m> e todos seus múltiplos.  Usando este método, encontre todos os números que são relativamente primos com <m>N= 120</m>.  Usando a Crivo de Eratóstenes, escreva um programa que calcule todos os primos menores do que um inteiro <m>N</m>. </p>
				</statement>
			</exercise>

			<exercise>
				<idx><h>Função de Ackermann</h></idx>
				<statement>
					<p>Seja <m>{\mathbb N}^0 = {\mathbb N} \cup \{ 0 \}</m>. A função de Ackermann é a função <m>A :{\mathbb N}^0 \times {\mathbb N}^0 \rightarrow {\mathbb N}^0</m> definida pelas equações
						<md>
							<mrow>A(0, y) &amp; = y + 1,</mrow>
							<mrow>A(x + 1, 0) &amp; = A(x, 1),</mrow>
							<mrow>A(x + 1, y + 1) &amp; = A(x, A(x + 1, y)).</mrow>
						</md>
					Use esta definição para calcular <m>A(3, 1)</m>.  Escreve um programa para avaliar a função de Ackermann.  Modifique o programa para que conta o número de comandos executados no programa quando se avalia a função de Ackermann.  Quantos comandos se executam na avaliação de <m>A(4, 1)</m>?  <m>A(5, 1)</m>?</p>
				</statement>
			</exercise>

			<exercise>
				<statement>
					<p>Escreve um programa que implemente o algoritmo de Euclides.  O programa deve aceitar os inteiros positivos <m>a</m> e <m>b</m> como entrada e a saída deve ser tanto <m>\gcd( a,b)</m> como inteiros <m>r</m> e <m>s</m> tais que 
					<me>\gcd( a,b) = ra + sb.</me></p>
			</statement>
		</exercise>
 
	</exercises>
 
<todo>Fix intro to references</todo>

	<references xml:id="integers-references">
			<title>Referências e Leituras Recomendadas</title>
<!-- References updated - TWJ 5/4/2010 -->

<!--			<p>References [2], [3], and [4] are good sources for elementary number
theory.</p> -->

		<biblio type="raw"> <!-- was [1] -->
		Brookshear, J. G. <title>Theory of Computation: Formal Languages, Automata, and Complexity</title>.  Benjamin/Cummings, Redwood City, CA, 1989. Mostra a relação entre computação teórica e teoria de conjuntos.</biblio>

 		<biblio type="raw"> <!-- was [2] -->
		<!-- Updated - TWJ 5/4/2010 -->
		Hardy, G. H. and Wright, E. M. <title>An Introduction to the Theory of Numbers</title>.  6th ed. Oxford University Press, New York, 2008. </biblio>

		<biblio type="raw"> <!-- was [3] -->
		<!-- Checked reference - TWJ 5/4/2010 -->
		Niven, I. and Zuckerman, H. S. <title>An Introduction to the Theory of Numbers</title>.  5th ed. Wiley, New York, 1991.</biblio>

		<biblio type="raw"> <!-- was [4] -->
		<!-- Checked reference - TWJ 5/4/2010 -->
		Vanden Eynden, C. <title>Elementary Number Theory</title>. 2nd ed.  Waveland Press, Long Grove IL, 2001.</biblio>

	</references>

	<xi:include href="./sage/integers-sage.xml" />
	<xi:include href="./sage/integers-sage-exercises.xml" />

</chapter>
